// Mocks generated by Mockito 5.0.10 from annotations
// in flutter_github_user_search/test/data/repository/github_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:flutter_github_user_search/data/models/detail/github_user_detail.dart'
    as _i5;
import 'package:flutter_github_user_search/data/models/search/user/search_user_result.dart'
    as _i4;
import 'package:flutter_github_user_search/data/network/github_data_source.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [GithubDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGithubDataSource extends _i1.Mock implements _i2.GithubDataSource {
  MockGithubDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.SearchUserResult?> searchUsers({String? query, int? page}) =>
      (super.noSuchMethod(
              Invocation.method(#searchUsers, [], {#query: query, #page: page}),
              returnValue: Future<_i4.SearchUserResult?>.value())
          as _i3.Future<_i4.SearchUserResult?>);
  @override
  _i3.Future<_i5.GithubUserDetail?> getUserDetail({String? login}) => (super
          .noSuchMethod(Invocation.method(#getUserDetail, [], {#login: login}),
              returnValue: Future<_i5.GithubUserDetail?>.value())
      as _i3.Future<_i5.GithubUserDetail?>);
}
